server {
  server_name staging.pokedextracker.com;

  # Forward requests under /api to the backend app.
  location /api {
    # This is fly.io's internal DNS server. More info:
    # https://fly.io/docs/reference/private-networking/#fly-internal-addresses
    resolver [fdaa::3]:53;

    # We use a variable here instead of just including it in the proxy_pass directive because we don't want failure of
    # resolution to prevent nginx from starting up, which is what will happen if we don't use a variable.
    set $upstream sjc.pokedextracker-staging-backend.internal:8647;

    # By using a variable for proxy_pass, it doesn't strip the prefix from the path, so we need to do that ourselves.
    if ($request_uri ~* "/api(/.*$)") {
      set  $path_remainder $1;
    }

    # Proxy to the backend server.
    proxy_pass http://$upstream$path_remainder;
  }

  # Forward all other requests to the frontend app.
  location / {
    # This is fly.io's internal DNS server. More info:
    # https://fly.io/docs/reference/private-networking/#fly-internal-addresses
    resolver [fdaa::3]:53;

    # We use a variable here instead of just including it in the proxy_pass directive because we don't want failure of
    # resolution to prevent nginx from starting up, which is what will happen if we don't use a variable.
    set $upstream sjc.pokedextracker-staging-frontend.internal:4939;

    # Proxy to the frontend server. We don't need to add $request_uri since it will automatically append it when
    # proxying.
    proxy_pass http://$upstream;
  }
}

# Strip the www from the domain.
server {
  server_name www.staging.pokedextracker.com;

  location / {
    return 301 https://staging.pokedextracker.com$request_uri;
  }
}
